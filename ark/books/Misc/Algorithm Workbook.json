[{"pageNumber":1,"pageContent":" Submitted by Dawn M. Cooper MA Communications - HPT Student: Governor’s State University CREATING ALGORITHMS A Task Analysis Technique "},{"pageNumber":2,"pageContent":" Table of Contents INTRODUCTION ............................................................................................................................................. 2 Program Outline| Page "},{"pageNumber":3,"pageContent":"INTRODUCTION An algorithm is a task analysis technique that details that process flow of behaviors using shapes, diagrams, and arrows. The purpose of using an algorithm is to provide a complete picture of a task and all of the steps needed to carry the task to completion. Learning algorithms as a task analysis technique is extremely important as many jobs are very process focused and the better job that is done outlining each step, the more likely it will be to uncover gaps in performance. The algorithm is similar t o the S -R table technique for task analysis in that they both map processes as a series of decision points. Al so, both the algorithm and the S -R analysis technique show the progression of a task from beginning to end with the contingencies of the previous steps being taken into consideration. The primary difference between the algorithm and the S -R Table is that the algorithm takes into account other possibilities and leads the task through alternative decision points based on those options. There are s everal benefits to using the algorithm as a task analysis technique. Some of them are : • It is a clear, concise way to capture the decisions and processes that the learner must follow • It has a distinct beginning and ending • The complexity of the algorithm is directly related to the complexity of the task. As a result, the learner can see with a bird’s eye view how cerebral a task may be For the purposes of this workbook on algorithms, the objectives are to: • Define algorithms as a task analysis technique • Comm unicate best practices for implementing algorithms as a task analysis technique • Provide examples of the algorithm process • Demonstrate the steps used to properly formulate an algorithm • Summarize the details of the algorithm and share additional resources Are you ready to get started? Great. Let’s begin... 2 | Page "},{"pageNumber":4,"pageContent":"Program Outline I. Algorithms -Background information a. Algorithms defined b. How algorithms are best used as a task analysis technique c. A few algorithm examples II. Creating a Great Algorithm a. Process Steps b. Action t able c. Algorithm Activity III. Summary a. Review of material b. Additional Resources 3 | Page "},{"pageNumber":5,"pageContent":"BACKGROUND As defined in the book, Figuring Things Out and according to training consultant, Ivan Horabin, an algorithm is an orderly procedure or exact prescription for solving a p roblem 1 . An algorithm takes the learner through a process that has a definitive beginning and ending. Algorithms, as they follow a process, build in decision points that can lead the learner to either continue the process or cease the process based on wh at choice is selected. As a task analysis technique, the algorithm is a terrific choice when the processes that the learner follows are clearly defined. Some examples of when use of the algorithm would be an optimal choice are: following a sales flow from beginning to end, rev iewing a technical process, procedures that build upon each other in a succinct fashion. To provide a simple example of an algorithm, consider the process of washing clothes in a washing machine. The start point in this example is gathering clothes and the end point is starting the washing machine. To illustrate:  1 Zemke, R. and Kramlinger, T. (1992) Figuring Things Out Reading, Massachusetts: Addison- Wesley Publishing Co., Inc. Sort clothes so that they are segmented by color group and fabric type START Gather clothes from hamper or laundry receptacle Are clothes one fabric type and color group? YES NO Load clothes in washer Add detergent Pull or push to begin wash cycle Select wash cycle that fits load type 4 | Page "},{"pageNumber":6,"pageContent":"As demonstrated in the algorithm, the process of beginning a load of clothes in the washing machine has a definitive beginning, gathering clothes from the hamper or laundry receptacle and a definitive ending, pull or push to begin wash cycle. By outlining each of the steps in this process, the training team has a view that can help them to uncover where the gaps exist i n the performance of the task. Algorithms, when developed, properly, can become one of the best task analysis techniques to draw the learner directly to the place where help may be needed. Oftentimes, a learner may know that a process is not working, but not be able to define why it is not working. By taking time to map out each step through an algorithm additional thought can draw the learner to the exact point or points that are creating conflict. Creating an algorithm is not a difficult task, but it is one that requires the instructional designer to carefully deconstruct each step so that important components of the process are not overlooked. As in the washing clothes example, something that many people have done hundreds of times, it might have been e asy to think, “Grab clothes and throw them in the washing machine”, or two steps. However, after carefully deconstructing the process, what was uncovered was, instead, 5 or 6 steps, depending on what was chosen at the decision point. To think about that example further, if the learner is saying, “I can’t wash clothes well . My clothes are always faded”, b y deconstructing the process, the decision point question, “Are clothes one fabric type and color group”, might uncover why there is a gap in the clothe s washing process. Let’s take a look at how to properly diagram an algorithm. The next section will walk through an action table that will demonstrate the necessary steps. 5 | Page "},{"pageNumber":7,"pageContent":"TARGET To create an algorithm you will follow the steps listed. For this example, an algorithm will be created to map out the steps needed to make an egg and bacon sandwich assuming all ingredients are available. STEP ACTION EXAMPLE 1 Think through and record all of the material s that are necessar y to complet e the task To make an egg and bacon sandwich, you need to: • Gather all ingredients; the egg, the bacon, the bread, the knife, the pan, stove 2 Determi ne your starting point To make an egg sandwich, the first step would most likely be to put the pan on the stove. 3 Carefully think through each step in the process, including decision points, and record them. The steps to completing an egg and bacon sandwich are: • Put the pan on the stove • Let the pan warm up for a few minutes (optional) • Take the bacon out of the package and place in the pan • Let the bacon coo k for approximately 12 minutes, • Turn it about the halfw ay point to brown the other side 6 | Page "},{"pageNumber":8,"pageContent":"• Decision point - Is it browned to your liking? o If yes, remove from pan o If no, continue to cook a few more minutes until satisfied with the result • Remove from pan • Decision poi nt #2 -Do you want to use shortening other than the bacon shortening? o If yes  Empty the pan  Clean it  Add more shortenin g o If no  Continue to next major step • Crack egg over pan • Carefully open egg • Empty contents into pan • Let egg cook until the edges appear cooked and the yolk is slightly done • Turn to the other side • Cook until the yolk is hardened to your liking • Remove from pan • Place on a plate • Take out two pieces of bread • Put the egg on the top of one of the pieces of bread • Fold the bacon and place on top of the egg’ • Take the second piece of bread and place on top to the other piece, the bacon and the egg 7 | Page "},{"pageNumber":9,"pageContent":"• Cut the sandwich in half • Enjoy the sandwich 4 Starting either at the top of the page, if in portrait view or to the far left, it in landscap e view, begin to build the algorith m, beginnin g with the first step. Taking the first step, put the pan the on the stove, first components of the algorithm would look like this:  START Put the pan on the stove. 8 | Page "},{"pageNumber":10,"pageContent":"5 Continue to build your algorithm using the appropriate algorithm shapes. The most common algorithm steps ar e the ones listed to the right. As you are become more advanced in your algorithm competencies, you will expand your options to diagram other enabling behaviors and operat ions that are a part of the task.  6 Review your algorithm for accuracy by walking back through each step in the process as it is written. Make any necessary adjustments. In walking back through the algorithm for making an egg and bacon sandwich, suppose it is determined that making an egg first would make more sense. The algorithm would need to be amended to reflect that decision. Either way, if the s teps are accurately followed, a delicious egg and bacon sandwich will result. Enjoy! PROCESS DECISION POINT ALTERNATE PROCESS START POINT SHORT DETER FROM PROCESS 9 | Page "},{"pageNumber":11,"pageContent":"Now, let’ s do an exercise that ties the algorithm process together . On the following page , use the process outlined in step #3 of the action table, create the algorithm for making an egg and bacon sandwich. Below, the algorithm process steps are numbered. Match the correct number of the algorithm shape to the activity.   1 2 3 4 5 6 7 10 | Page "},{"pageNumber":12,"pageContent":"1. ______________ Put the pan on the stove 2. ______________ Let the pan warm up for a few minutes 3. ______________ Take bacon out of the package and place in the pan 4. ______________ Let the bacon cook for approximately 6 minutes 5. ______________ Turn over to brown the other side 6. ______________ Is it browned to your liking? 7. ______________ Remove from pan 8. ______________ Do you want to use shortening other than bacon shortening? 9. ______________ Crack egg over pan 10. ______________ Carefully open the egg 11. ______________ Let egg cook until edges appear cooked and the yolk is slightly done. 12. ______________ Remove from pan 13. ______________ Place on a plate 14. ______________ Take out two pieces of bread 15. ______________ Put the egg on the top of one of the pieces of bread 16. ______________ Fold the bacon and place on top of the egg  11 | Page "},{"pageNumber":13,"pageContent":"SUMMARY As discussed, algorithms are very important task analysis techniques. When formulating task analyses for process -driven jobs, building an algorithm becomes a great option, allowing the instructional designer to be able to easily see all of the steps in the process. At the start of our lesson, the objectives were to: • Define algorithms as a task analysis technique • Communicate best practices for implementing algorithms as a task analysis technique • Provide examples of the algorithm process • Demonstrate the steps used to properly formulate an algorithm • Summarize the details of the algorithm and share additional resources Through the text and use of the activities found he rein, a more thorough understanding of an algorithm and how to build one using the appropriate shapes is the desired outcome. The upcoming lesson, Task Listings, is a perfect complement to the algorithm. The task listing establishes an outline of the task s and the algorithm places those tasks in a pictorial format. Both are linear in their approach and are great for process -based jobs. As we are reviewing the Task Listings lesson, think about how the outlines that you establish can fit into an algorithm f ormat. 12 | Page "}]
